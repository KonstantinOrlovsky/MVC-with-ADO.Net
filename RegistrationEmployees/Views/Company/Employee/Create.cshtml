@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model DataAccessLayer.Employee
@using DataAccessLayer.Data

@{
    ViewBag.Title = Constants.TitleCreateEmployee;
}
<h2>@Constants.TitleCreateEmployee</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.Label(@Constants.Surname, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">

            @Html.Label(@Constants.Name, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(@Constants.Patronymic, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(@Constants.Post, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Post, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Post, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(@Constants.Company, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">


                @Html.DropDownListFor(model => model.CompanyId, ViewBag.Companies as SelectList, htmlAttributes: new { @class = "form-control" })

            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Constants.Create class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink(Constants.Cancel, Constants.ListView)
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>